<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AllFiles" xml:space="preserve">
    <value>All Files</value>
  </data>
  <data name="BitmapImages" xml:space="preserve">
    <value>Bitmap Images</value>
  </data>
  <data name="ConvertingStreams" xml:space="preserve">
    <value>Converting streams...</value>
  </data>
  <data name="FarcLoadingExtract" xml:space="preserve">
    <value>Extracting files...</value>
  </data>
  <data name="MenuImage" xml:space="preserve">
    <value>_Image</value>
  </data>
  <data name="MenuImageExport" xml:space="preserve">
    <value>_Export</value>
  </data>
  <data name="MenuImageImport" xml:space="preserve">
    <value>_Import</value>
  </data>
  <data name="MenuUtilities" xml:space="preserve">
    <value>_Utilities</value>
  </data>
  <data name="MenuUtilitiesExportSoundtrack" xml:space="preserve">
    <value>Export _Soundtrack</value>
  </data>
  <data name="PluginAuthor" xml:space="preserve">
    <value />
  </data>
  <data name="PluginCredits" xml:space="preserve">
    <value>Rom Editor Credits:
psy_commando (Pokemon portraits, most of the research)
Grovyle91 (Language strings)
evandixon (Personality test, bgp files)</value>
  </data>
  <data name="PluginName" xml:space="preserve">
    <value>ROM Editor</value>
  </data>
  <data name="PNGImages" xml:space="preserve">
    <value>PNG Images</value>
  </data>
  <data name="PSMDSoundTrackAlbum" xml:space="preserve">
    <value>Pokémon Super Mystery Dungeon</value>
  </data>
  <data name="PSMDSoundTrackArtist" xml:space="preserve">
    <value>Chunsoft</value>
  </data>
  <data name="Complete" xml:space="preserve">
    <value>Complete</value>
  </data>
  <data name="CTEImageFiles" xml:space="preserve">
    <value>CTE Image Files</value>
  </data>
  <data name="Game_AS" xml:space="preserve">
    <value>Pokémon Alpha Sapphire</value>
  </data>
  <data name="Game_GTI" xml:space="preserve">
    <value>Pokémon Mystery Dungeon: Gates to Infinity</value>
  </data>
  <data name="Game_OR" xml:space="preserve">
    <value>Pokémon Omega Ruby</value>
  </data>
  <data name="Game_PSMD" xml:space="preserve">
    <value>Pokémon Super Mystery Dungeon</value>
  </data>
  <data name="Game_X" xml:space="preserve">
    <value>Pokémon X</value>
  </data>
  <data name="Game_Y" xml:space="preserve">
    <value>Pokémon Y</value>
  </data>
  <data name="LoadingAnalzingFiles" xml:space="preserve">
    <value>Analyzing files...</value>
  </data>
  <data name="LoadingApplyingPatch" xml:space="preserve">
    <value>Applying patch...</value>
  </data>
  <data name="LoadingComparingFiles" xml:space="preserve">
    <value>Comparing files...</value>
  </data>
  <data name="LoadingComputingHashes" xml:space="preserve">
    <value>Computing hashes...</value>
  </data>
  <data name="LoadingConvertingBackgrounds" xml:space="preserve">
    <value>Converting backgrounds...</value>
  </data>
  <data name="LoadingCopyingFiles" xml:space="preserve">
    <value>Copying files...</value>
  </data>
  <data name="LoadingGeneratingPatch" xml:space="preserve">
    <value>Generating patch...</value>
  </data>
  <data name="NDSRomFile" xml:space="preserve">
    <value>Nintendo DS ROMs</value>
  </data>
  <data name="ThreeDSRomFile" xml:space="preserve">
    <value>Nintendo 3DS ROMs</value>
  </data>
  <data name="LoadingBuildingLanguageFiles" xml:space="preserve">
    <value>Building language files...</value>
  </data>
  <data name="LoadingCompilingScripts" xml:space="preserve">
    <value>Compiling scripts...</value>
  </data>
  <data name="LoadingConvertingLanguages" xml:space="preserve">
    <value>Converting languages...</value>
  </data>
  <data name="LoadingConvertingPersonalityTest" xml:space="preserve">
    <value>Converting personality test...</value>
  </data>
  <data name="LoadingDecompilingScripts" xml:space="preserve">
    <value>Decompiling scripts...</value>
  </data>
  <data name="LoadingExtractingLanguages" xml:space="preserve">
    <value>Extracting languages...</value>
  </data>
  <data name="LoadingLanguages" xml:space="preserve">
    <value>Loading languages...</value>
  </data>
  <data name="LoadingUnpacking" xml:space="preserve">
    <value>Unpacking...</value>
  </data>
  <data name="LoadingExtractingNDSRomXofY" xml:space="preserve">
    <value>Extracting NDS ROM... ({0} of {1})</value>
  </data>
  <data name="MenuDev" xml:space="preserve">
    <value>_Development</value>
  </data>
  <data name="MenuDevDeploy" xml:space="preserve">
    <value>_Deploy</value>
  </data>
  <data name="MenuDevExtractNDS" xml:space="preserve">
    <value>Extract NDS</value>
  </data>
  <data name="LoadingAddingFiles" xml:space="preserve">
    <value>Adding files...</value>
  </data>
  <data name="ErrorScriptCommandAttributeInvalidType" xml:space="preserve">
    <value>The property with the CommandParameter Attribute was not applied to the correct type.</value>
    <comment>The message for an exception that's thrown when a CommandParameterAttribute is applied to a property that is not of the correct type.</comment>
  </data>
  <data name="LoadingPacking" xml:space="preserve">
    <value>Packing...</value>
  </data>
  <data name="ErrorModPackTypeNotSupported" xml:space="preserve">
    <value>The given system type "{0}" is not supported.</value>
  </data>
</root>